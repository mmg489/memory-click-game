{"version":3,"sources":["components/NavMessage/NavMessage.js","components/Nav/Nav.js","components/Header/Header.js","components/Container/Container.js","components/ClickItem/ClickItem.js","components/Footer/Footer.js","components/Game/Game.js","App.js","registerServiceWorker.js","index.js"],"names":["NavMessage","state","message","animating","renderMessage","_this","_this2","this","score","_ref","topScore","newState","setState","setTimeout","react_default","a","createElement","className","Component","Nav","props","href","components_NavMessage_NavMessage","Header","Container","children","ClickItem","role","aria-label","onClick","handleClick","id","style","backgroundImage","concat","image","shake","Footer","alt","src","Game","data","handleCorrectGuess","newData","_this$state","newScore","newTopScore","shuffleData","handleIncorrectGuess","resetData","map","item","Object","objectSpread","clicked","i","length","j","Math","floor","random","temp","handleItemClick","guessedCorrectly","newItem","components_Nav_Nav","components_Header_Header","components_Container_Container","components_ClickItem_ClickItem","key","components_Footer_Footer","App","components_Game_Game","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.057fc265.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./NavMessage.css\";\n\nclass NavMessage extends Component {\n  state = {\n    message: \"\",\n    animating: false\n  };\n\n  componentWillReceiveProps({ score, topScore }) {\n    const newState = { animating: true };\n    if (score === 0 && topScore === 0) {\n      newState.message = \"\";\n    } else if (score === 0 && topScore > 0) {\n      newState.message = \"incorrect\";\n    } else {\n      newState.message = \"correct\";\n    }\n    this.setState(newState, () =>\n      setTimeout(() => this.setState({ animating: false }), 500)\n    );\n  }\n\n  renderMessage = () => {\n    switch (this.state.message) {\n    case \"correct\":\n      return \"You guessed correctly!\";\n    case \"incorrect\":\n      return \"You guessed incorrectly!\";\n    default:\n      return \"Click an image to begin!\";\n    }\n  };\n\n  render() {\n    return (\n      <li className={this.state.animating ? this.state.message : \"\"}>\n        {this.renderMessage()}\n      </li>\n    );\n  }\n}\n\nexport default NavMessage;\n","import React from \"react\";\nimport NavMessage from \"../NavMessage\";\nimport \"./Nav.css\";\n\n// Component for the Navbar\n\nconst Nav = props => (\n  <nav className=\"navbar\">\n    <ul>\n      <li className=\"brand\">\n        <a href=\"/\">Clicky Game</a>\n      </li>\n      <NavMessage score={props.score} topScore={props.topScore} />\n      <li>\n        Score: {props.score} | Top Score: {props.topScore}\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Nav;\n","import React from \"react\";\nimport \"./Header.css\";\n\nconst Header = props => (\n  <header className=\"header\">\n    <h1>Clicky Game!</h1>\n    <p>\n      Click on an image only once to earn points!\n    </p>\n  </header>\n);\n\nexport default Header;\n","import React from \"react\";\nimport \"./Container.css\";\n\nconst Container = props => <main className=\"container\">{props.children}</main>;\n\nexport default Container;\n","import React from \"react\";\nimport \"./ClickItem.css\";\n\nconst ClickItem = props => (\n  <div\n    role=\"img\"\n    aria-label=\"click item\"\n    onClick={() => props.handleClick(props.id)}\n    style={{ backgroundImage: `url(\"${props.image}\")` }}\n    className={`click-item${props.shake ? \" shake\" : \"\"}`}\n  />\n);\n\nexport default ClickItem;\n","import React from \"react\";\nimport \"./Footer.css\";\n\nconst Footer = () => (\n  <footer className=\"footer\">\n    <div className=\"bottom\">\n      React Memory Click Game <img alt=\"react\" src=\"assets/images/starGif.gif\" />\n    </div>\n  </footer>\n);\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport Nav from \"../Nav\";\nimport Header from \"../Header\";\nimport Container from \"../Container\";\nimport ClickItem from \"../ClickItem\";\nimport Footer from \"../Footer\";\nimport data from \"../../data.json\";\n\nclass Game extends Component {\n  state = {\n    data,\n    score: 0,\n    topScore: 0\n  };\n\n  componentDidMount() {\n    this.setState({ data: this.shuffleData(this.state.data) });\n  }\n\n  handleCorrectGuess = newData => {\n    const { topScore, score } = this.state;\n    const newScore = score + 1;\n    const newTopScore = newScore > topScore ? newScore : topScore;\n    this.setState({\n      data: this.shuffleData(newData),\n      score: newScore,\n      topScore: newTopScore\n    });\n  };\n\n  handleIncorrectGuess = data => {\n    this.setState({\n      data: this.resetData(data),\n      score: 0\n    });\n  };\n\n  resetData = data => {\n    const resetData = data.map(item => ({ ...item, clicked: false }));\n    return this.shuffleData(resetData);\n  };\n\n  shuffleData = data => {\n    let i = data.length - 1;\n    while (i > 0) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = data[i];\n      data[i] = data[j];\n      data[j] = temp;\n      i--;\n    }\n    return data;\n  };\n\n  handleItemClick = id => {\n    let guessedCorrectly = false;\n    const newData = this.state.data.map(item => {\n      const newItem = { ...item };\n      if (newItem.id === id) {\n        if (!newItem.clicked) {\n          newItem.clicked = true;\n          guessedCorrectly = true;\n        }\n      }\n      return newItem;\n    });\n    guessedCorrectly\n      ? this.handleCorrectGuess(newData)\n      : this.handleIncorrectGuess(newData);\n  };\n\n  render() {\n    return (\n      <div>\n        <Nav score={this.state.score} topScore={this.state.topScore} />\n        <Header />\n        <Container>\n          {this.state.data.map(item => (\n            <ClickItem\n              key={item.id}\n              id={item.id}\n              shake={!this.state.score && this.state.topScore}\n              handleClick={this.handleItemClick}\n              image={item.image}\n            />\n          ))}\n        </Container>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from \"react\";\nimport Game from \"./components/Game\";\n\nconst App = () => <Game />;\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}